/*=======================================================================================
[부분집합 구하기] : 깊이우선탐색
자연수 N이 주어지면 1부터 N까지의 원소를 갖는 집합의 부분집합을 모두 출력하는 프로그램을 작성하라.
=======================================================================================*/

// ▣ 입력설명
// 첫 번째 줄에 자연수 N(1<=N<=10)이 주어진다.

// ▣ 출력설명
// 첫 번째 줄부터 각 줄에 하나씩 부분집합을 아래와 출력예제와 같은 순서로 출력한다.
// 단 공집합은 출력하지 않는다.

// ▣ 입력예제 1
// 3

// ▣ 출력예제 1
// 1 2 3
// 1 2
// 1 3
// 1
// 2 3
// 2
// 3

function solution(n) {
  let answer = [];
  let check = Array.from({ length: n + 1 }, () => 0);
  function DFS(v) {
    if (v === n + 1) {
      let temp = [];
      for (let i = 1; i <= n; i++) {
        if (check[i] === 1) {
          temp.push(i);
        }
      }
      if (temp.length > 0) answer.push(temp);
    } else {
      // 세갈래 이상 되면 for loop 추천

      // 포함하는 재귀
      check[v] = 1;
      DFS(v + 1);
      // 포함하지 않는 재귀
      check[v] = 0;
      DFS(v + 1);
    }
  }

  DFS(1);

  return answer;
}

/**
 * ========================================================
 * @Title       : 04_부분집합_구하기
 * @Path        : javascript\02_Solved\inflearn\h.recursion\04_부분집합_구하기.spec.js
 * @Description :
 * @Date        : 2021-07-13 11:42:00
 * --------------------------------------------------------
 * @Author      : Inseong-so(https://github.com/inseong-so)
 * ========================================================
 */
describe('04_부분집합_구하기', () => {
  // 테스트 케이스명
  it('기본1', () => {
    // 파라미터 정의
    let k = 3;
    const result = [[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3]];

    // 테스트 결과 정의
    expect(solution(k)).toEqual(result);
  });
});
