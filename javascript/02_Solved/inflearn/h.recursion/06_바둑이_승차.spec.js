/*=======================================================================================
[바둑이 승차] : 깊이우선탐색
철수는 그의 바둑이들을 데리고 시장에 가려고 한다. 그런데 그의 트럭은 C킬로그램 넘게 태울 수가 없다.
철수는 C를 넘지 않으면서 그의 바둑이들을 가장 무겁게 태우고 싶다.
N마리의 바둑이와 각 바둑이의 무게 W가 주어지면, 철수가 트럭에 태울 수 있는 가장 무거운 무게를 구하는 프로그램을 작성하라.
=======================================================================================*/

// ▣ 입력설명
// 첫 번째 줄에 자연수 C(1<=C<=100,000,000)와 N(1<=N<=30)이 주어진다.
// 둘째 줄부터 N마리 바둑이의 무게가 주어진다.

// ▣ 출력설명
// 첫 번째 줄에 가장 무거운 무게를 출력한다.

// ▣ 입력예제 1
// 259 5
// 81
// 58
// 42
// 33
// 61

// ▣ 출력예제 1
// 242

function solution(c, arr) {
  let answer = Number.MIN_SAFE_INTEGER;
  let n = arr.length;

  function DFS(v, sum) {
    if (sum > c) return;
    if (v === n) {
      answer = Math.max(answer, sum);
    } else {
      DFS(v + 1, sum + arr[v]);
      DFS(v + 1, sum);
    }
  }

  DFS(0, 0);

  return answer;
}

/**
 * ========================================================
 * @Title       : 06_바둑이_승차
 * @Path        : javascript\02_Solved\inflearn\h.recursion\06_바둑이_승차.spec.js
 * @Description :
 * @Date        : 2021-07-13 11:52:26
 * --------------------------------------------------------
 * @Author      : Inseong-so(https://github.com/inseong-so)
 * ========================================================
 */
describe('06_바둑이_승차', () => {
  // 테스트 케이스명
  it('기본1', () => {
    // 파라미터 정의
    let k = 259;
    let arr = [81, 58, 42, 33, 61];
    const result = 242;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });
});
