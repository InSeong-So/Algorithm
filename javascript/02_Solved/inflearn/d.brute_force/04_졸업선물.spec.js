/*=======================================================================================
[ 졸업 선물 ]
선생님은 올해 졸업하는 반 학생들에게 졸업선물을 주려고 한다.
학생들에게 인터넷 쇼핑몰에서 각자 원하는 상품을 골라 그 상품의 가격과 배송비를 제출하라고 했다.
선생님이 가지고 있는 예산은 한정되어 있다.
현재 예산으로 최대 몇 명의 학생에게 선물을 사줄 수 있는지 구하는 프로그램을 작성하라.
선생님은 상품 하나를 50% 할인해서(반 가격) 살 수 있는 쿠폰을 가지고 있다.
배송비는 할인에 포함되지 않는다.
=======================================================================================*/

// ▣ 입력설명
// 첫 번째 줄에 반 학생수 N(1<=N<=1000)과 예산 M(1<=M<=100,000,000)이 주어진다.
// 두 번째 줄부터 N줄에 걸쳐 각 학생들이 받고 싶은 상품의 가격과 배송비가 입력된다.
// 상품가격과 배송비는 각각 100,000을 넘지 않으며 상품가격은 짝수로만 입력된다.

// ▣ 출력설명
// 첫 번째 줄에 선생님이 현재 예산으로 선물할 수 있는 최대 학생수를 출력한다.
// 선생님은 최소한 1개 이상의 상품을 살 수 있는 예산을 가지고 있다.

// ▣ 입력예제 1
// 5 28
// 6 6
// 2 2
// 4 3
// 4 5
// 10 3

// ▣ 출력예제 1
// 4
// (2, 2), (4, 3), (4, 5)와 (10, 3)를 할인받아 (5, 3)에 사면 비용이 4+7+9+8=28 이다.

function solution(m, product) {
  let answer = 0;
  let temp = [];
  let total = 0;
  // 가격순으로 정렬하기
  product.sort((a, b) => {
    return a[0] - b[0];
  });

  for (let i = 0; i < product.length; i++) {
    temp = [];
    total = 0;
    let last = product.length - 1 - i;
    if (last < 0) break;
    let big = product[last][0] / 2 + product[last][1];

    for (let j = i; j < product.length; j++) {
      if (last === j) break;
      total += product[j][0] + product[j][1];

      if (total <= m) {
        temp.push(product[j]);
        if (total + big === m) {
          temp.push(product[last]);
          break;
        }
      }
    }

    answer = answer < temp.length ? temp.length : answer;
  }

  return answer;
}

describe('졸업선물', () => {
  it('기본 테스트 케이스1', () => {
    let arr = [
      [6, 6],
      [2, 2],
      [4, 3],
      [4, 5],
      [10, 3],
    ];
    expect(solution(28, arr)).toEqual(4);
  });

  it('기본 테스트 케이스2', () => {
    let arr = [
      [6, 6],
      [2, 2],
      [4, 3],
      [4, 5],
      [6, 2],
      [8, 3],
      [10, 3],
    ];
    expect(solution(42, arr)).toEqual(5);
  });
});
