/*=======================================================================================
[ 봉우리 ]
지도 정보가 N * N 격자판에 주어진다. 각 격자에는 그 지역의 높이가 쓰여 있다.
각 격자판의 숫자 중 자신의 상하좌우 숫자보다 큰 숫자는 봉우리 지역이다.
봉우리 지역이 몇 개 있는 지 알아내는 프로그램을 작성하라.
격자의 가장자리는 0으로 초기화 되었다고 가정한다.
만약 N = 5 이고, 격자판의 숫자가 다음과 같다면 봉우리의 개수는 10개이다.
0   0   0   0   0   0   0
0   '5' 3   '7' 2   '3' 0
0   3   '7' 1   '6' 1   0
0   '7' 2   5   3   '4' 0
0   4   3   '6' 4   1   0
0   '8' 7   '3' 5   2   0
0   0   0   0   0   0   0
=======================================================================================*/

// ▣ 입력설명
// 첫 줄에 자연수 N이 주어진다.(1 <= N <= 50)
// 두 번째 줄부터 N줄에 걸쳐 각 줄에 N개의 자연수가 주어진다.각 자연수는 100을 넘지 않는다.

// ▣ 출력설명
// 봉우리의 개수를 출력하라.

// ▣ 입력예제 1
// 5
// 5 3 7 2 3
// 3 7 1 6 1
// 7 2 5 3 4
// 4 3 6 4 1
// 8 7 3 5 2

// ▣ 출력예제 1
// 10
function solution(arr) {
  let answer = 0;

  let directions = [
    [1, 0],
    [-1, 0],
    [0, 1],
    [0, -1],
  ];

  for (let i = 0; i < arr.length; i++) {
    for (let j = 0; j < arr.length; j++) {
      let check = false;
      for (let d of directions) {
        try {
          if (arr[i][j] <= arr[i + d[0]][j + d[1]]) {
            check = false;
            break;
          } else {
            check = true;
          }
        } catch (e) {
          check = true;
        }
      }

      if (check) {
        answer++;
      }
    }
  }

  return answer;
}

let arr = [
  [5, 3, 7, 2, 3],
  [3, 7, 1, 6, 1],
  [7, 2, 5, 3, 4],
  [4, 3, 6, 4, 1],
  [8, 7, 3, 5, 2],
];
console.log(solution(arr));
