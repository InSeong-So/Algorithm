// https://www.acmicpc.net/problem/1260 문제의 입력을 수정한 내용입니다.

/*
[문제]
그래프를 DFS로 탐색한 결과와 BFS로 탐색한 결과를 출력하는 프로그램을 작성하시오.
단, 방문할 수 있는 정점이 여러 개인 경우에는 정점 번호가 작은 것을 먼저 방문하고, 더 이상 방문할 수 있는 점이 없는 경우 종료한다.
정점 번호는 1번부터 N번까지이다.

[입력]
첫째 줄에 정점의 개수 N(1 ≤ N ≤ 1,000), 간선의 개수 M(1 ≤ M ≤ 10,000), 탐색을 시작할 정점의 번호 V가 주어진다.
다음 M개의 줄에는 간선이 연결하는 두 정점의 번호가 주어진다.
어떤 두 정점 사이에 여러 개의 간선이 있을 수 있다. 입력으로 주어지는 간선은 양방향이다.

[출력]
첫째 줄에 DFS를 수행한 결과를, 그 다음 줄에는 BFS를 수행한 결과를 출력한다.
V부터 방문된 점을 순서대로 출력하면 된다.
*/

function solution() {}

/**
 * ========================================================
 * @Title       : 01_DFS와_BFS(1260)
 * @Path        : javascript\02_Solved\boj\graph_theory\01_DFS와_BFS(1260).spec.js
 * @Description :
 * @Date        : 2021-07-06 22:46:17
 * --------------------------------------------------------
 * @Author      : Inseong-so(https://github.com/inseong-so)
 * ========================================================
 */
describe('01_DFS와_BFS(1260)', () => {
  // 테스트 케이스명
  it('기본1', () => {
    // 파라미터 정의
    let k = 0;
    let arr = [0, 'a'];

    // 4 5 1
    // 1 2
    // 1 3
    // 1 4
    // 2 4
    // 3 4

    // 1 2 4 3
    // 1 2 3 4

    const result = 1000;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });

  it('기본2', () => {
    // 파라미터 정의
    let k = 0;
    let arr = [0, 'a'];

    // 5 5 3
    // 5 4
    // 5 2
    // 1 2
    // 3 4
    // 3 1

    // 3 1 2 5 4
    // 3 1 4 2 5
    const result = 1000;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });

  it('기본3', () => {
    // 파라미터 정의
    let k = 0;
    let arr = [0, 'a'];

    // 1000 1 1000
    // 999 1000

    // 1000 999
    // 1000 999

    const result = 1000;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });
});
