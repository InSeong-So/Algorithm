// https://www.acmicpc.net/problem/2178 문제의 입력을 수정한 내용입니다.

/*
[문제]
N×M크기의 배열로 표현되는 미로가 있다.

1	0	1	1	1	1
1	0	1	0	1	0
1	0	1	0	1	1
1	1	1	0	1	1
미로에서 1은 이동할 수 있는 칸을 나타내고, 0은 이동할 수 없는 칸을 나타낸다.
이러한 미로가 주어졌을 때, (1, 1)에서 출발하여 (N, M)의 위치로 이동할 때 지나야 하는 최소의 칸 수를 구하는 프로그램을 작성하시오.
한 칸에서 다른 칸으로 이동할 때, 서로 인접한 칸으로만 이동할 수 있다.

위의 예에서는 15칸을 지나야 (N, M)의 위치로 이동할 수 있다.
칸을 셀 때에는 시작 위치와 도착 위치도 포함한다.

[입력]
첫째 줄에 두 정수 N, M(2 ≤ N, M ≤ 100)이 주어진다.
다음 N개의 줄에는 M개의 정수로 미로가 주어진다.
각각의 수들은 붙어서 입력으로 주어진다.

[출력]
첫째 줄에 지나야 하는 최소의 칸 수를 출력한다.
항상 도착위치로 이동할 수 있는 경우만 입력으로 주어진다.
*/

function solution() {}

/**
 * ========================================================
 * @Title       : 02_미로탐색(2178)
 * @Path        : javascript\02_Solved\boj\graph_theory\02_미로탐색(2178).spec.js
 * @Description :
 * @Date        : 2021-07-06 22:53:03
 * --------------------------------------------------------
 * @Author      : Inseong-so(https://github.com/inseong-so)
 * ========================================================
 */
describe('02_미로탐색(2178)', () => {
  // 테스트 케이스명
  it('기본1', () => {
    // 파라미터 정의

    // 4 6
    // 101111
    // 101010
    // 101011
    // 111011

    // 15
    const result = 1000;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });

  // 테스트 케이스명
  it('기본2', () => {
    // 파라미터 정의

    // 4 6
    // 110110
    // 110110
    // 111111
    // 111101

    // 9
    const result = 1000;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });

  // 테스트 케이스명
  it('기본3', () => {
    // 파라미터 정의

    // 2 25
    // 1011101110111011101110111
    // 1110111011101110111011101

    // 38
    const result = 1000;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });

  // 테스트 케이스명
  it('기본4', () => {
    // 파라미터 정의

    // 7 7
    // 1011111
    // 1110001
    // 1000001
    // 1000001
    // 1000001
    // 1000001
    // 1111111

    // 13
    const result = 1000;

    // 테스트 결과 정의
    expect(solution(k, arr)).toEqual(result);
  });
});
