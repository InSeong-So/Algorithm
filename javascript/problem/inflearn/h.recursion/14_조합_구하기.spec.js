/*=======================================================================================
[조합 구하기]
1부터 N까지 번호가 적힌 구슬이 있다. 이 중 M개를 뽑는 방법의 수를 출력하는 프로그램을 작성하라.
=======================================================================================*/

// ▣ 입력설명
// 첫 번째 줄에 자연수 N(3<=N<=10)과 M(2<=M<=N) 이 주어진다.

// ▣ 출력설명
// 출력순서는 사전순으로 오름차순으로 출력한다.

// ▣ 입력예제 1
// 4 2

// ▣ 출력예제 1
// 1 2
// 1 3
// 1 4
// 2 3
// 2 4
// 3 4

function solution(n, m) {
  let answer = [];
  let temp = Array.from({ length: m }, () => 0);
  function DFS(v, s) {
    if (v === m) {
      answer.push(temp.slice());
    } else {
      for (let i = s; i <= n; i++) {
        temp[v] = i;
        DFS(v + 1, i + 1);
      }
    }
  }

  DFS(0, 1);

  return answer;
}

/**
 * ========================================================
 * @Title       : 14_조합_구하기
 * @Path        : javascript\02_Solved\inflearn\h.recursion\14_조합_구하기.spec.js
 * @Description :
 * @Date        : 2021-07-13 12:43:39
 * --------------------------------------------------------
 * @Author      : Inseong-so(https://github.com/inseong-so)
 * ========================================================
 */
describe('14_조합_구하기', () => {
  // 테스트 케이스명
  it('기본1', () => {
    // 파라미터 정의
    let k = 4;
    let n = 2;
    const result = [
      [1, 2],
      [1, 3],
      [1, 4],
      [2, 3],
      [2, 4],
      [3, 4],
    ];

    // 테스트 결과 정의
    expect(solution(k, n)).toEqual(result);
  });
});
