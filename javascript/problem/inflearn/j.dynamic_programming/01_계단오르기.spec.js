/*=======================================================================================
[ 계단오르기 ]
철수는 계단을 오를 때 한 번에 한 계단 또는 두 계단씩 올라간다.
만약 총 4계단을 오른다면 그 방법의 수는 
1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2 로 5가지이다. 
그렇다면 총 N계단일 때 철수가 올라갈 수 있는 방법의 수는 몇 가지인가?
=======================================================================================*/

// ▣ 입력설명
// 첫째 줄은 계단의 개수인 자연수 N(3≤N≤45)이 주어진다.

// ▣ 출력설명
// 첫 번째 줄에 올라가는 방법의 수를 출력한다.

// ▣ 입력예제 1
// 7

// ▣ 출력예제 1
// 21

function solution(n) {
  let dy = Array.from({ length: n + 1 }, () => 0);

  dy[1] = 1;
  dy[2] = 2;

  for (let i = 3; i <= n; i++) {
    dy[i] = dy[i - 2] + dy[i - 1];
  }

  console.log(dy);

  return dy[n];
}

/**
 * ========================================================
 * @Title       : 01_계단오르기
 * @Path        : javascript\02_Solved\inflearn\j.dynamic_programming\01_계단오르기.spec.js
 * @Description : 동적 계획법
 * @Date        : 2021-07-06 16:15:29
 * --------------------------------------------------------
 * @Author      : Inseong-so(https://github.com/inseong-so)
 * ========================================================
 */
describe('01_계단오르기', () => {
  // 테스트 케이스명
  it('기본1', () => {
    // 파라미터 정의
    let k = 7;
    const result = 21;

    // 테스트 결과 정의
    expect(solution(k)).toEqual(result);
  });
});
